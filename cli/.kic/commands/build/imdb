#!/bin/bash

#name: imdb
#short: Build and deploy the IMDb reference app to the local cluster

cd "$REPO_BASE" || exit

# validate directories
if [ ! -d /workspaces/imdb-app ]; then echo "/workspaces/imdb-app directory not found. Please clone the imdb-app repo to /workspaces"; exit 1; fi
if [ ! -d deploy ]; then echo "$REPO_BASE/deploy directory not found. Please cd to an appropriate directory"; exit 1; fi
if [ ! -d deploy/apps ]; then echo "$REPO_BASE/deploy/apps directory not found. Please cd to an appropriate directory"; exit 1; fi
if [ ! -d deploy/apps/imdb ]; then echo "$REPO_BASE/deploy/apps/imdb directory not found. Please cd to an appropriate directory"; exit 1; fi
if [ ! -d deploy/apps/webv ]; then echo "$REPO_BASE/deploy/apps/webv directory not found. Please cd to an appropriate directory"; exit 1; fi

# delete webv and imdb
kubectl delete -f deploy/apps/webv --ignore-not-found=true --wait=false
kubectl delete -f deploy/apps/imdb --ignore-not-found=true --wait=false

# build and push the local image
docker build /workspaces/imdb-app -t k3d-registry.localhost:5500/imdb-app:local
docker push k3d-registry.localhost:5500/imdb-app:local

# wait for delete to finish
kubectl wait pod -l app=webv -n imdb --for delete --timeout=30s
kubectl wait pod -l app=imdb -n imdb --for delete --timeout=30s

# deploy local app and re-deploy webv
kubectl apply -f deploy/apps/imdb
kubectl wait pod -l app=imdb -n imdb --for condition=ready --timeout=30s
kubectl apply -f deploy/apps/webv
kubectl wait pod -l app=webv -n imdb --for condition=ready --timeout=30s

# show status and curl results
kubectl get pods -n imdb
http localhost:30080/version
